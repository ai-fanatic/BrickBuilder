<Activity mc:Ignorable="sap sap2010" x:Class="Build" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TemplatePath" Type="InArgument(x:String)" />
    <x:Property Name="in_OutputPath" Type="InArgument(x:String)" />
    <x:Property Name="in_BricksDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_InputPath" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1233,2932</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Build_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Text</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="26">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Build" sap:VirtualizedContainerService.HintSize="476,2867" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[in_BricksDT]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="434,2775" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,2655" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="ActivityName" />
              <Variable x:TypeArguments="x:String" Name="ActivityFolder" />
              <Variable x:TypeArguments="x:String" Name="ActivityProjectPath" />
              <Variable x:TypeArguments="x:String" Name="SourceFile" />
              <Variable x:TypeArguments="x:String" Name="DestinationFile" />
              <Variable x:TypeArguments="x:String" Name="SourceProjectJson" />
              <Variable x:TypeArguments="x:String" Name="DestinationProjectJson" />
              <Variable x:TypeArguments="x:String" Name="SourceXAML" />
              <Variable x:TypeArguments="st:StringBuilder" Name="DestinationXAML" />
              <Variable x:TypeArguments="x:String" Name="SourceProjectFile" />
              <Variable x:TypeArguments="x:String" Name="Description" />
              <Variable x:TypeArguments="sd:DataTable" Name="ArgumentsDT" />
              <Variable x:TypeArguments="sd:DataTable" Name="Dependencies" />
              <Variable x:TypeArguments="x:String" Name="DestinationProjectFile" />
              <Variable x:TypeArguments="x:String" Name="ProjectFolder" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign ActivityName" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ActivityName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[If(String.IsNullOrEmpty(CurrentRow("NewActivityName").ToString),CurrentRow("FileName").ToString.Replace(".xaml","") , CurrentRow("NewActivityName").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign ActivityFolder" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ActivityFolder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[If(String.IsNullOrEmpty(CurrentRow("Category").ToString),CurrentRow("FileFolder").ToString , CurrentRow("Category").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign SourceFile" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[SourceFile]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[CurrentRow("FilePath").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign ProjectFolder" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[ProjectFolder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[CurrentRow("ProjectFolder").toString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign SourceProjectFile" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[SourceProjectFile]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.Combine(in_InputPath,ProjectFolder,"project.json")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign Description" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[Description]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[If(String.IsNullOrEmpty(CurrentRow("Description").ToString),ActivityName, CurrentRow("Description").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[String.Format(&quot;Building {0}&quot;,ActivityName)]" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke StageProject workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Bricks\StageProject.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_OutputPath">[in_OutputPath]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_ActivityName">[ActivityName]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_ActivityFolder">[ActivityFolder]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_TemplatePath">[in_TemplatePath]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_ActivityProjectPath">[ActivityProjectPath]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SourceFile">[SourceFile]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Assign DisplayName="Assign DestinationFile" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[DestinationFile]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.Combine(ActivityProjectPath,ActivityName+".xaml")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign SourceProjectFile" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[DestinationProjectFile]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Path.Combine(ActivityProjectPath,"project.json")]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CreateTestFiles workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Bricks\CreateTestFiles.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_ActivityProjectPath">[ActivityProjectPath]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_TemplatePath">[in_TemplatePath]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_ActivityArguments">[CurrentRow("Arguments").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_ActivityName">[ActivityName]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_FileCount">[CINT(in_Config("TestCaseCount"))]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke FixActivitySequences workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Bricks\FixActivitySequences.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_ActivityFilePath">[DestinationFile]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_ActivityName">[ActivityName]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ProjectDependencies workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Bricks\ProjectDependencies.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_Dependencies">[Dependencies]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SourceProjectFile">[SourceProjectFile]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_TargetProjectFile">[DestinationProjectFile]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke FixProjectFile workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Bricks\FixProjectFile.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_ProjectFilePath">[Path.Combine(ActivityProjectPath, "project.json")]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_ProjectName">[ActivityName]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Main">[ActivityName+".xaml"]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Description">[Description]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LoadXamls workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Bricks\LoadXamls.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ContinueOnError">False</InArgument>
                <InArgument x:TypeArguments="s:Exception" x:Key="in_CustomException">[Nothing]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_Assertion" />
                <InArgument x:TypeArguments="x:Int32" x:Key="in_CustomTimeout">30000</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SourceFilePath">[SourceFile]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_DestinationFilePath">[DestinationFile]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_SourceXAML">[SourceXAML]</OutArgument>
                <OutArgument x:TypeArguments="st:StringBuilder" x:Key="out_DestinationXAML">[DestinationXAML]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke MergeNamespaces workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Bricks\MergeNamespaces.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ContinueOnError">False</InArgument>
                <InArgument x:TypeArguments="s:Exception" x:Key="in_CustomException">[Nothing]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_Assertion" />
                <InArgument x:TypeArguments="x:Int32" x:Key="in_CustomTimeout">30000</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SourceXAML">[SourceXAML]</InArgument>
                <InOutArgument x:TypeArguments="st:StringBuilder" x:Key="io_DesinationXAML">[DestinationXAML]</InOutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke MergeSourceArguments workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Bricks\MergeSourceArguments.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ContinueOnError">False</InArgument>
                <InArgument x:TypeArguments="s:Exception" x:Key="in_CustomException">[Nothing]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_Assertion" />
                <InArgument x:TypeArguments="x:Int32" x:Key="in_CustomTimeout">30000</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SourceXAML">[SourceXAML]</InArgument>
                <InOutArgument x:TypeArguments="st:StringBuilder" x:Key="io_DesinationXAML">[DestinationXAML]</InOutArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_ArgumentsDT">[ArgumentsDT]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke MergeActivityBody workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Bricks\MergeActivityBody.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_ContinueOnError">False</InArgument>
                <InArgument x:TypeArguments="s:Exception" x:Key="in_CustomException">[Nothing]</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_Assertion" />
                <InArgument x:TypeArguments="x:Int32" x:Key="in_CustomTimeout">30000</InArgument>
                <InOutArgument x:TypeArguments="st:StringBuilder" x:Key="io_DesinationXAML">[DestinationXAML]</InOutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_SourceXAML">[SourceXAML]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke WriteXaml workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Bricks\WriteXaml.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_Xaml">[DestinationXAML.ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_XamlFilePath">[DestinationFile]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke UpdateReadMe workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Bricks\CreateReadme.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[Path.Combine(ActivityProjectPath, "README.md")]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Category">[ActivityFolder]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Type">Activity</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Language">VB</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Description">[Description]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Name">[ActivityName]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Usage">UiPath Studio</InArgument>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_StudioDependencies">[Dependencies]</InArgument>
                <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Arguments">[ArgumentsDT]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
  </Sequence>
</Activity>